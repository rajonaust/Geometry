// Line Segments Intersect
// Check whether two line segments intersect with each other or not .
#include <iostream>
using namespace std;
struct Point
{
    int x , y ;
};
int orientation(Point P,Point Q,Point R)
{
    int res = (Q.y-P.y)*(R.x-Q.x) - (Q.x-P.x)*(R.y-Q.y) ;
    if(res>0) return 1 ;
    else if(res<0) return -1 ;
    else return 0;
}
bool onSegment(Point P,Point Q,Point R)
{
    if(R.x>=min(P.x,Q.x)&&R.x<=max(P.x,Q.x)&&R.y>=min(P.y,Q.y)&&R.y<=max(P.y,Q.y)) return true ;
    else return false;
}
bool doIntersect(Point x1,Point y1,Point x2, Point y2)
{
    int o1 = orientation(x1,y1,x2);
    int o2 = orientation(x1,y1,y2);
    int o3 = orientation(x2,y2,x1);
    int o4 = orientation(x2,y2,y1);
    if(o1!=o2&&o3!=o4) return true;

    if(o1==0&&onSegment(x1,y1,x2)) return true;
    if(o2==0&&onSegment(x1,y1,y2)) return true;
    if(o3==0&&onSegment(x2,y2,x1)) return true;
    if(o4==0&&onSegment(x2,y2,y1)) return true;

    return false ;
}
int main()
{
    Point x1,y1,x2,y2; // x1 and y1 point create a line segment . x1 and y2 point create another line segment .
    x1={1,1};y1={10,1};
    x2={1,2};y2={10,2};
    if(doIntersect(x1,y1,x2,y2)) cout << "YES\n" ; else cout << "NO\n" ;
    x1={10,0};y1={0,10};
    x2={0,0};y2={10,10};
    if(doIntersect(x1,y1,x2,y2)) cout << "YES\n" ; else cout << "NO\n" ;
    x1={-5,-5};y1={0,0};
    x2={1,1};y2={10,10};
    if(doIntersect(x1,y1,x2,y2)) cout << "YES\n" ; else cout << "NO\n" ;
    return 0;
}
/*
NO
YES
NO
*/
